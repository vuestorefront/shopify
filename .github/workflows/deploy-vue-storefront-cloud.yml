name: Deploy to Vue Storefront Cloud
on:
  push:
    branches:
      - main
      - staging
      - develop

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: shhh1
        shell: bash
        run: echo "BASE_URL ${{ secrets.BASE_URL }}" | rev
      - name: Checkout code
        uses: actions/checkout@v1
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: 16.x
      - name: Build and publish docker image
        uses: elgohr/Publish-Docker-Github-Action@v5
        with:
          name: demo-shopify-storefrontcloud-io/vue-storefront:${{ github.sha }}
          registry: registry.vuestorefront.cloud
          username: ${{ secrets.CLOUD_USERNAME }}
          password: ${{ secrets.CLOUD_PASSWORD }}
          dockerfile: .vuestorefrontcloud/docker/Dockerfile
          buildoptions: --compress
          buildargs: NPM_EMAIL,NPM_PASS,NPM_USER,NPM_REGISTRY,SHOPIFY_STOREFRONT_TOKEN,SHOPIFY_DOMAIN,BASE_URL
        env:
          NPM_EMAIL: ${{ secrets.NPM_EMAIL }}
          NPM_PASS: ${{ secrets.CLOUD_PASSWORD }}
          NPM_USER: ${{ secrets.CLOUD_USERNAME }}
          NPM_REGISTRY: https://registrynpm.storefrontcloud.io
          SHOPIFY_STOREFRONT_TOKEN: ${{ secrets.SHOPIFY_STOREFRONT_TOKEN }}
          SHOPIFY_DOMAIN: ${{ secrets.SHOPIFY_DOMAIN }}
          BASE_URL: ${{ secrets.BASE_URL }}
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: chrnorm/deployment-action@releases/v1
        name: Create GitHub deployment
        id: deployment
        with:
          token: ${{ github.token }}
          target_url: https://demo-shopify.europe-west1.gcp.storefrontcloud.io
          environment: production
          initial_status: in_progress
      - name: Deploy on demo-shopify.europe-west1.gcp.storefrontcloud.io
        if: startsWith(github.ref, 'refs/heads/main')
        run: |
          if curl -s -H 'X-User-Id: ${{ secrets.CLOUD_USERNAME }}'  -H 'X-Api-Key: ${{ secrets.CLOUD_PASSWORD }}' -H 'Content-Type: application/json' -X POST -d '{
              "code":"demo-shopify",
              "region":"europe-west1.gcp",
              "frontContainerVersion":"${{ github.sha }}"
            }' https://farmer.storefrontcloud.io/instances | grep -q '{"code":200,"result":"Instance updated!"}'; then
            echo "Instance updated"
          else
            echo "Something went wrong during the update process..."
            exit 1
          fi
      - name: Deploy on demo-shopify-dev.europe-west1.gcp.storefrontcloud.io/
        if: startsWith(github.ref, 'refs/heads/develop')
        run: |
          if curl -s -H 'X-User-Id: ${{ secrets.CLOUD_USERNAME }}'  -H 'X-Api-Key: ${{ secrets.CLOUD_PASSWORD }}' -H 'Content-Type: application/json' -X POST -d '{
              "code":"demo-shopify-dev",
              "region":"europe-west1.gcp",
              "frontContainerVersion":"${{ github.sha }}"
            }' https://farmer.storefrontcloud.io/instances | grep -q '{"code":200,"result":"Instance updated!"}'; then
            echo "Instance updated"
          else
            echo "Something went wrong during the update process..."
            exit 1
          fi
      - name: Deploy on demo-shopify-canary.europe-west1.gcp.storefrontcloud.io
        if: startsWith(github.ref, 'refs/heads/staging')
        run: |
          if curl -s -H 'X-User-Id: ${{ secrets.CLOUD_USERNAME }}'  -H 'X-Api-Key: ${{ secrets.CLOUD_PASSWORD }}' -H 'Content-Type: application/json' -X POST -d '{
              "code":"demo-shopify-canary",
              "region":"europe-west1.gcp",
              "frontContainerVersion":"${{ github.sha }}"
            }' https://farmer.storefrontcloud.io/instances | grep -q '{"code":200,"result":"Instance updated!"}'; then
            echo "Instance updated"
          else
            echo "Something went wrong during the update process..."
            exit 1
          fi
      - name: Update deployment status (success)
        if: success()
        uses: chrnorm/deployment-status@releases/v1
        with:
          token: ${{ github.token }}
          target_url: https://demo-shopify.europe-west1.gcp.storefrontcloud.io
          state: success
          description: Congratulations! The deploy is done.
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
      - name: Update deployment status (failure)
        if: failure()
        uses: chrnorm/deployment-status@releases/v1
        with:
          token: ${{ github.token }}
          target_url: https://demo-shopify.europe-west1.gcp.storefrontcloud.io
          description: Unfortunately, the instance hasn't been updated.
          state: failure
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
